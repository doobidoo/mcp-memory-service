{
  "permissions": {
    "allow": [
      "Bash(curl -s \"https://api.cloudflare.com/client/v4/accounts/be0e35a26715043ef8df90253268c33f/d1/database/f745e9b4-ba8e-4d47-b38f-12af91060d5a/query\" -H \"Authorization: Bearer Y9qwW1rYkwiE63iWYASxnzfTQlIn-mtwCihRTwZa\" -H \"Content-Type: application/json\" -d '{\"\"\"\"sql\"\"\"\":\"\"\"\"SELECT COUNT(*) as count FROM memories\"\"\"\"}')",
      "Bash(python -c \"import sys, json; data = json.load(sys.stdin); print(f\"\"Cloudflare memories: {data[''''result''''][0][''''results''''][0][''''count'''']}\"\")\")",
      "Bash(python:*)",
      "Bash(curl -s \"https://api.cloudflare.com/client/v4/accounts/be0e35a26715043ef8df90253268c33f/d1/database/f745e9b4-ba8e-4d47-b38f-12af91060d5a/query\" -H \"Authorization: Bearer Y9qwW1rYkwiE63iWYASxnzfTQlIn-mtwCihRTwZa\" -H \"Content-Type: application/json\" -d \"{\"\"sql\"\":\"\"SELECT content_hash FROM memories WHERE content_hash IN (''''000e27fc86fc06bef47c80225d0f0e720675ff97f31fa35425d51f6264ac21fc'''', ''''0042526a545948c65c065282ba08caaddfa934d3d0b9f3a8963076ceb5f519a6'''')\"\"}\")",
      "Bash(curl -s \"https://api.cloudflare.com/client/v4/accounts/be0e35a26715043ef8df90253268c33f/d1/database/f745e9b4-ba8e-4d47-b38f-12af91060d5a/query\" -H \"Authorization: Bearer Y9qwW1rYkwiE63iWASxnzfTQlIn-mtwCihRTwZa\" -H \"Content-Type: application/json\" -d '{\"\"\"\"sql\"\"\"\":\"\"\"\"SELECT content_hash FROM memories ORDER BY created_at DESC LIMIT 5\"\"\"\"}')",
      "Bash(curl:*)",
      "Bash(claude mcp list:*)",
      "Bash(claude mcp:*)",
      "Bash(cat:*)",
      "Bash(where claude)",
      "Read(//c/Users/heinrich.krupp/**)",
      "Bash(ls -la \"C:\\Users\\heinrich.krupp\\.config\\claude\"\" 2>/dev/null || ls -la \"$APPDATAClaude\"\")",
      "Bash(git stash push:*)",
      "Bash(python3:*)",
      "Bash(git rm:*)",
      "Bash(tee:*)",
      "Bash(chmod:*)",
      "Bash(./scripts/server/start_http_server.sh:*)",
      "Bash(pkill:*)",
      "Read(//tmp/**)",
      "mcp__memory-service__store_memory",
      "Read(//home/hkr/.local/share/mcp-memory/**)",
      "Bash(kill:*)",
      "Bash(/dev/null)",
      "Bash(env)",
      "Read(//home/hkr/.config/**)",
      "Read(//home/hkr/**)",
      "Read(//home/hkr/.claude/**)",
      "Bash(claude config list)",
      "Bash(printenv)",
      "Bash(printenv:*)",
      "Bash(npx mcp-remote:*)",
      "Bash(find:*)",
      "Bash(uvx:*)",
      "Bash(uv tool run:*)",
      "Bash(echo $PATH)",
      "Bash(source ~/.bashrc)",
      "Bash(uv run memory server:*)",
      "Bash(lsof:*)",
      "Bash(ps:*)",
      "Read(//proc/1278810/**)",
      "Bash(journalctl:*)",
      "Bash(sqlite3:*)",
      "mcp__memory__check_database_health",
      "mcp__memory__retrieve_memory",
      "mcp__memory__recall_memory",
      "Bash(./start_hybrid_server.sh:*)",
      "Bash(systemctl:*)",
      "Read(//etc/systemd/system/**)",
      "Bash(bash scripts/service/install_http_service.sh:*)",
      "Bash(loginctl enable-linger:*)",
      "mcp__memory__store_memory",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat(linux): add systemd user service support for HTTP server\n\nAdd comprehensive systemd service support for automatic HTTP server management\non Linux systems, addressing common hooks configuration issues.\n\nNew Features:\n- systemd user service with automatic startup on login\n- Interactive installation script (user/system service choice)\n- Persistent operation with loginctl linger support\n- Centralized logging via journald\n- Environment loading from .env file\n- Security hardening (NoNewPrivileges, PrivateTmp)\n\nNew Files:\n- scripts/service/mcp-memory-http.service - Service definition with %h paths\n- scripts/service/install_http_service.sh - Interactive installer\n- docs/deployment/systemd-service.md - Complete setup guide (314 lines)\n\nDocumentation:\n- Updated docs/http-server-management.md with systemd section\n- Enhanced troubleshooting for port mismatch (8000 vs 8889)\n- Added systemd commands to CLAUDE.md Essential Commands\n- Added \"Troubleshooting Hooks Not Retrieving Memories\" section\n\nFixes:\n- Documented hooks endpoint configuration requirements\n- Clarified HTTP server is required for hooks (stdio MCP incompatible)\n- Removed redundant SERVICE_MANAGEMENT.md and start_hybrid_server.sh\n\nUsage:\n  bash scripts/service/install_http_service.sh\n  systemctl --user start mcp-memory-http.service\n  systemctl --user enable mcp-memory-http.service\n  loginctl enable-linger $USER\n\nRelated: #156 (memory hooks fixes)\nCloses common configuration issue where hooks fail silently\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(node session-start.js)",
      "Bash(node:*)",
      "Bash(uv lock:*)",
      "Bash(~/.local/bin/uv lock:*)",
      "Bash(~/.cargo/bin/uv:*)",
      "Bash(git commit:*)",
      "Bash(gh run list:*)",
      "Bash(echo $XDG_CURRENT_DESKTOP)",
      "Bash(dpkg -l)",
      "Bash(code --version)",
      "Bash(xdg-open http://127.0.0.1:8000/)"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "memory-service",
    "cloudflare-observability",
    "cloudflare-bindings",
    "Context7",
    "code-context",
    "gemini-code-assist",
    "memory"
  ]
}
