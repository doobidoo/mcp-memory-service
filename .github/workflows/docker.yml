name: Build and Publish Docker Images

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: full
            dockerfile: tools/docker/Dockerfile
            tag_suffix: ""
            skip_model_download: "true"
          - name: slim
            dockerfile: tools/docker/Dockerfile.slim
            tag_suffix: "-slim"
            skip_model_download: "true"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Optional: login to a custom registry (e.g., Docker Hub)
      # Provide REGISTRY, REGISTRY_USERNAME, REGISTRY_PASSWORD secrets to enable
      - name: Login to custom registry
        if: ${{ secrets.REGISTRY && secrets.REGISTRY_USERNAME && secrets.REGISTRY_PASSWORD }}
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Extract version
        id: version
        run: |
          # Use git tag if available (refs/tags/vX.Y.Z), else use short SHA
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            ver=${GITHUB_REF#refs/tags/}
          else
            ver="sha-${GITHUB_SHA::7}"
          fi
          echo "version=$ver" >> $GITHUB_OUTPUT

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/') && matrix.name == 'full' }}
            type=raw,value=slim,enable=${{ startsWith(github.ref, 'refs/tags/') && matrix.name == 'slim' }}
            type=raw,value=${{ steps.version.outputs.version }}${{ matrix.tag_suffix }}
            type=raw,value=edge${{ matrix.tag_suffix }},enable=${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./mcp-memory-service
          file: ./mcp-memory-service/${{ matrix.dockerfile }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SKIP_MODEL_DOWNLOAD=${{ matrix.skip_model_download }}

